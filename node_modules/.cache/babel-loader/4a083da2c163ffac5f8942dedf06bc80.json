{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Projects\\\\food ordering app\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  let updatedItems = [...state.items];\n  let updatedTotalAmount = 0;\n\n  if (action.type === 'ADD') {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n\n    if (existingItemIndex >= 0) {\n      //updatedItems = [...state.items];\n      updatedItems[existingItemIndex].amount = updatedItems[existingItemIndex].amount + action.item.amount;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n  } else if (action.type === 'REMOVE') {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    updatedTotalAmount = state.totalAmount - updatedItems[existingItemIndex].price;\n\n    if (updatedItems[existingItemIndex].amount === 1) {\n      updatedItems.splice(existingItemIndex, 1);\n    } else {\n      updatedItems[existingItemIndex].amount -= 1;\n    }\n  }\n\n  return {\n    items: updatedItems,\n    totalAmount: updatedTotalAmount\n  };\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const defaultContext = {\n    items: [],\n    totalAmount: 0\n  };\n  const [cartState, cartDispatch] = useReducer(cartReducer, defaultContext);\n\n  const addItemHandler = item => {\n    cartDispatch({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    cartDispatch({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const clearItemHandler = () => {\n    cartDispatch({\n      type: 'CLEAR'\n    });\n  };\n\n  const contextValue = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler,\n    clearItem: clearItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"+zaaoMX/lUEiKuFis5B1KcHOLLQ=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/React/Projects/food ordering app/src/components/store/CartProvider.js"],"names":["React","useReducer","CartContext","cartReducer","state","action","updatedItems","items","updatedTotalAmount","type","existingItemIndex","findIndex","item","id","amount","concat","totalAmount","price","splice","CartProvider","props","defaultContext","cartState","cartDispatch","addItemHandler","removeItemHandler","clearItemHandler","contextValue","addItem","removeItem","clearItem","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst cartReducer = (state, action) => {\r\n    let updatedItems = [...state.items];\r\n    let updatedTotalAmount = 0;\r\n    if(action.type === 'ADD'){        \r\n        const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        if(existingItemIndex >= 0){\r\n            //updatedItems = [...state.items];\r\n            updatedItems[existingItemIndex].amount = updatedItems[existingItemIndex].amount + action.item.amount;\r\n        }\r\n        else{\r\n            updatedItems = state.items.concat(action.item);\r\n        }        \r\n        updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    }\r\n    else if(action.type === 'REMOVE'){\r\n        const existingItemIndex = state.items.findIndex(item => item.id === action.id);\r\n        updatedTotalAmount = state.totalAmount - updatedItems[existingItemIndex].price;\r\n        if(updatedItems[existingItemIndex].amount === 1){\r\n            updatedItems.splice(existingItemIndex, 1);\r\n        }\r\n        else{\r\n            updatedItems[existingItemIndex].amount -= 1;\r\n        }\r\n\r\n    }\r\n    return {items: updatedItems, totalAmount: updatedTotalAmount};\r\n}\r\nconst CartProvider = props => {\r\n    const defaultContext = {\r\n        items: [],\r\n        totalAmount: 0\r\n    }\r\n    const [cartState, cartDispatch] = useReducer(cartReducer, defaultContext);\r\n    const addItemHandler = item =>{\r\n        cartDispatch({type: 'ADD', item: item});\r\n    }\r\n    const removeItemHandler = id =>{\r\n        cartDispatch({type: 'REMOVE', id: id});\r\n    }\r\n    const clearItemHandler = () => {\r\n        cartDispatch({type: 'CLEAR'});\r\n    }\r\n    const contextValue = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler,\r\n        clearItem: clearItemHandler\r\n    }\r\n    return(\r\n        <CartContext.Provider value = {contextValue}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}