{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Projects\\\\food ordering app\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.number;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return {\n    items: [],\n    totalAmount: 0\n  };\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const defaultContext = {\n    items: [],\n    totalAmount: 0\n  };\n  const [cartState, cartDispatch] = useReducer(cartReducer, defaultContext);\n\n  const addItemHandler = item => {\n    cartDispatch({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    cartDispatch({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const contextValue = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"+zaaoMX/lUEiKuFis5B1KcHOLLQ=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/React/Projects/food ordering app/src/components/store/CartProvider.js"],"names":["React","useReducer","CartContext","cartReducer","state","action","type","updatedItems","items","concat","item","updatedTotalAmount","totalAmount","price","number","CartProvider","props","defaultContext","cartState","cartDispatch","addItemHandler","removeItemHandler","id","contextValue","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGP,KAAK,CAACQ,WAAN,GAAoBP,MAAM,CAACK,IAAP,CAAYG,KAAZ,GAAoBR,MAAM,CAACK,IAAP,CAAYI,MAA/E;AAEA,WAAO;AAACN,MAAAA,KAAK,EAAED,YAAR;AAAsBK,MAAAA,WAAW,EAAED;AAAnC,KAAP;AACH;;AACD,SAAO;AAACH,IAAAA,KAAK,EAAE,EAAR;AAAYI,IAAAA,WAAW,EAAE;AAAzB,GAAP;AACH,CARD;;AASA,MAAMG,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,cAAc,GAAG;AACnBT,IAAAA,KAAK,EAAE,EADY;AAEnBI,IAAAA,WAAW,EAAE;AAFM,GAAvB;AAIA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACE,WAAD,EAAcc,cAAd,CAA5C;;AACA,QAAMG,cAAc,GAAGV,IAAI,IAAG;AAC1BS,IAAAA,YAAY,CAAC;AAACb,MAAAA,IAAI,EAAE,KAAP;AAAcI,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMW,iBAAiB,GAAGC,EAAE,IAAG;AAC3BH,IAAAA,YAAY,CAAC;AAACb,MAAAA,IAAI,EAAE,QAAP;AAAiBgB,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAZ;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG;AACjBf,IAAAA,KAAK,EAAE,EADU;AAEjBI,IAAAA,WAAW,EAAE,CAFI;AAGjBY,IAAAA,OAAO,EAAEJ,cAHQ;AAIjBK,IAAAA,UAAU,EAAEJ;AAJK,GAArB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIE,YAA/B;AAAA,cACKP,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBD;;GAAMX,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD'){\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.number;\r\n\r\n        return {items: updatedItems, totalAmount: updatedTotalAmount};\r\n    }\r\n    return {items: [], totalAmount: 0};\r\n}\r\nconst CartProvider = props => {\r\n    const defaultContext = {\r\n        items: [],\r\n        totalAmount: 0\r\n    }\r\n    const [cartState, cartDispatch] = useReducer(cartReducer, defaultContext);\r\n    const addItemHandler = item =>{\r\n        cartDispatch({type: 'ADD', item: item});\r\n    }\r\n    const removeItemHandler = id =>{\r\n        cartDispatch({type: 'REMOVE', id: id});\r\n    }\r\n    const contextValue = {\r\n        items: [],\r\n        totalAmount: 0,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }\r\n    return(\r\n        <CartContext.Provider value = {contextValue}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}